// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly for image type 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "aspectRatio": 1,
        "marginTop": 20,
        "opacity": 1,
        "width": "80%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "aspectRatio": 1,
          "backgroundColor": "#e8e8e8",
          "borderColor": "#d6d6d6",
          "borderRadius": 10,
          "borderWidth": 2,
          "display": "flex",
          "justifyContent": "center",
          "width": "90%",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#d6d6d6",
            "fontSize": 24,
          }
        }
      >
        +
      </Text>
    </View>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onRequestClose={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "white",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      pointerEvents="box-none"
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "backgroundColor": "rgba(255,255,255,0)",
          "display": "flex",
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
          "width": "90%",
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "marginLeft": 15,
                "marginRight": 15,
              },
              undefined,
              undefined,
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              pointerEvents="box-only"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9E9E9E",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "padding": 19,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "padding": 12,
                  },
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "backgroundColor": "#ff0042",
                    "borderRadius": 10,
                    "margin": 5,
                    "width": "100%",
                  },
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {},
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    Array [
                      Object {
                        "color": "white",
                        "fontSize": 20,
                      },
                      undefined,
                      Object {
                        "fontSize": 17.5,
                      },
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                    ],
                  ]
                }
              >
                Choose from library!
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "marginLeft": 15,
                "marginRight": 15,
              },
              undefined,
              undefined,
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              pointerEvents="box-only"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9E9E9E",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "padding": 19,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "padding": 12,
                  },
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "backgroundColor": "#ff0042",
                    "borderRadius": 10,
                    "margin": 5,
                    "width": "100%",
                  },
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {},
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    Array [
                      Object {
                        "color": "white",
                        "fontSize": 20,
                      },
                      undefined,
                      Object {
                        "fontSize": 17.5,
                      },
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                    ],
                  ]
                }
              >
                Take picture with camera!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "flex-end",
        "backgroundColor": "#a3052e",
        "borderColor": "#a3052e",
        "borderRadius": 20,
        "borderWidth": 1,
        "elevation": 1,
        "marginRight": "5%",
        "opacity": 1,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontSize": 15,
          "fontWeight": "bold",
          "paddingBottom": 5,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 5,
        }
      }
    >
      Add deadline +
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ff0042",
        "borderColor": "#ff0042",
        "borderRadius": 20,
        "borderWidth": 1,
        "bottom": 50,
        "elevation": 1,
        "height": 50,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 3,
        "width": 150,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontSize": 15,
          "fontWeight": "bold",
        }
      }
    >
      Create task ✓
    </Text>
  </View>
</View>
`;

exports[`renders correctly for text type 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    blurOnSubmit={true}
    containerViewStyle={
      Object {
        "marginLeft": -10,
        "marginRight": null,
        "width": "105%",
      }
    }
    enablesReturnKeyAutomatically={true}
    multiline={true}
    onChangeText={[Function]}
    onSubmitEditing={[Function]}
    placeholder="Add some descriptive and motivating text to your task! 💪🏼"
    returnKeyType="done"
    style={
      Object {
        "backgroundColor": "#f3f3f3",
        "borderColor": "#f3f3f3",
        "borderRadius": 15,
        "borderWidth": 1,
        "fontSize": 17,
        "fontWeight": "bold",
        "height": 200,
        "marginBottom": 20,
        "marginTop": 20,
        "padding": 10,
        "textAlignVertical": "top",
        "width": "90%",
      }
    }
    underlineColorAndroid="rgba(0,0,0,0)"
  />
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "flex-end",
        "backgroundColor": "#a3052e",
        "borderColor": "#a3052e",
        "borderRadius": 20,
        "borderWidth": 1,
        "elevation": 1,
        "marginRight": "5%",
        "opacity": 1,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontSize": 15,
          "fontWeight": "bold",
          "paddingBottom": 5,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 5,
        }
      }
    >
      Add deadline +
    </Text>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ff0042",
        "borderColor": "#ff0042",
        "borderRadius": 20,
        "borderWidth": 1,
        "bottom": 50,
        "elevation": 1,
        "height": 50,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 3,
        "width": 150,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontSize": 15,
          "fontWeight": "bold",
        }
      }
    >
      Create task ✓
    </Text>
  </View>
</View>
`;
